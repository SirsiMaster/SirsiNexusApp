#!/bin/zsh

# 🚀 SirsiNexus Master Launcher
# Revolutionary unified binary platform launcher with intelligent environment detection

# Colors for better output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Banner
echo -e "${CYAN}================================================================${NC}"
echo -e "${CYAN}🚀 SirsiNexus - AI-Powered Infrastructure Management Platform${NC}"
echo -e "${CYAN}================================================================${NC}"
echo -e "${GREEN}✨ Unified Binary Architecture - Revolutionary Breakthrough ✨${NC}"
echo -e "${CYAN}================================================================${NC}"
echo ""

# Navigate to the SirsiNexus directory
SCRIPT_DIR="$(dirname "$0")"
cd "$SCRIPT_DIR"

# Function to check if binary exists and build if needed
check_and_build_binary() {
    if [[ ! -f "./sirsi-nexus" ]]; then
        echo -e "${YELLOW}🔧 Binary not found. Building sirsi-nexus...${NC}"
        if [[ -d "core-engine" ]]; then
            cd core-engine
            echo -e "${BLUE}📦 Building release binary...${NC}"
            cargo build --release --bin sirsi-nexus
            if [[ $? -eq 0 ]]; then
                cd ..
                cp target/release/sirsi-nexus ./sirsi-nexus
                chmod +x sirsi-nexus
                echo -e "${GREEN}✅ Binary built successfully!${NC}"
            else
                echo -e "${RED}❌ Build failed!${NC}"
                exit 1
            fi
        else
            echo -e "${RED}❌ Error: core-engine directory not found!${NC}"
            exit 1
        fi
    fi
}

# Function to check prerequisites
check_prerequisites() {
    echo -e "${BLUE}🔍 Checking prerequisites...${NC}"
    
    # Check if config exists
    if [[ ! -f "config/default.yaml" ]]; then
        echo -e "${YELLOW}⚠️  Configuration file not found. Creating default config...${NC}"
        mkdir -p config
        # Create minimal config if it doesn't exist
        cat > config/default.yaml << EOF
server:
  http_addr: "0.0.0.0:8080"
  grpc_addr: "0.0.0.0:50051"
  websocket_addr: "0.0.0.0:8081"
database:
  url: "postgresql://root@localhost:26257/sirsi_nexus?sslmode=disable"
  host: "localhost"
  port: 26257
  username: "root"
  password: ""
  database: "sirsi_nexus"
  max_connections: 20
  sslmode: "disable"
redis:
  url: "redis://127.0.0.1:6379"
jwt:
  secret: "development-secret-key"
  expiration: 1440
telemetry:
  service_name: "sirsi-nexus"
  environment: "development"
  otlp_endpoint: "http://localhost:4317"
EOF
        echo -e "${GREEN}✅ Default configuration created${NC}"
    fi
    
    echo -e "${GREEN}✅ Prerequisites check complete${NC}"
}

# Function to show usage
show_usage() {
    echo -e "${PURPLE}🎯 Usage Examples:${NC}"
    echo ""
    echo -e "${CYAN}Basic Commands:${NC}"
    echo -e "  ${GREEN}./sirsi start${NC}              # Start the platform"
    echo -e "  ${GREEN}./sirsi status${NC}             # Show platform status"
    echo -e "  ${GREEN}./sirsi health${NC}             # Show platform health"
    echo -e "  ${GREEN}./sirsi stop${NC}               # Stop the platform"
    echo ""
echo -e "${CYAN}Development:${NC}"
echo -e "  ${GREEN}./sirsi start --dev${NC}        # Development mode with frontend"
echo -e "  ${GREEN}./sirsi start --log-level debug${NC}  # Debug logging"
echo ""
echo -e "${CYAN}GUI Interface:${NC}"
echo -e "  ${GREEN}./launch-gui.sh${NC}          # Start web dashboard (localhost:3000)"
echo -e "  ${GREEN}./launch-full-stack.sh${NC}   # Start backend + web dashboard"
echo -e "  ${GREEN}./gui${NC}                   # Quick web dashboard launcher"
    echo ""
    echo -e "${CYAN}Configuration:${NC}"
    echo -e "  ${GREEN}./sirsi config show${NC}        # Show current configuration"
    echo -e "  ${GREEN}./sirsi config reset${NC}       # Reset to defaults"
    echo ""
    echo -e "${CYAN}Advanced:${NC}"
    echo -e "  ${GREEN}./sirsi start --daemon${NC}     # Background mode"
    echo -e "  ${GREEN}./sirsi start -c custom.yaml${NC}  # Custom config file"
    echo ""
    echo -e "${PURPLE}📋 All CLI Options:${NC}"
    ./sirsi-nexus --help
}

# Main logic
check_and_build_binary
check_prerequisites

# Handle arguments
if [[ $# -eq 0 ]]; then
    show_usage
    exit 0
fi

# Show what we're running
echo -e "${BLUE}🎯 Executing: sirsi-nexus $@${NC}"
echo ""

# Execute the binary with all arguments
./sirsi-nexus "$@"
