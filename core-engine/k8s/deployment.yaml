apiVersion: v1
kind: Namespace
metadata:
  name: sirsi-nexus
  labels:
    app: sirsi-nexus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sirsi-config
  namespace: sirsi-nexus
data:
  production.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
      grpc_port: 50051
      metrics_port: 9090
    
    database:
      url: "postgresql://postgres:password@postgres-service:5432/sirsinexus"
      max_connections: 20
      min_connections: 5
      connection_timeout: 30
    
    redis:
      url: "redis://redis-service:6379"
      max_connections: 10
    
    security:
      jwt_secret: "${JWT_SECRET}"
      spiffe_trust_domain: "sirsi-nexus.local"
      vault_addr: "${VAULT_ADDR}"
    
    telemetry:
      tracing_endpoint: "http://jaeger-collector:14268/api/traces"
      metrics_enabled: true
      logging_level: "info"
    
    hypervisor:
      max_agents: 1000
      scheduler_interval: 5
      resource_monitoring: true
      auto_scaling: true
---
apiVersion: v1
kind: Secret
metadata:
  name: sirsi-secrets
  namespace: sirsi-nexus
type: Opaque
data:
  jwt-secret: c2lyc2luZXh1cy1qd3Qtc2VjcmV0LWNoYW5nZS1tZQ== # base64 encoded
  vault-token: dm9sdC10b2tlbi1jaGFuZ2UtbWU= # base64 encoded
  db-password: cGFzc3dvcmQ= # base64 encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sirsi-core
  namespace: sirsi-nexus
  labels:
    app: sirsi-core
    version: v0.2.1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sirsi-core
  template:
    metadata:
      labels:
        app: sirsi-core
        version: v0.2.1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sirsi-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: sirsi-core
        image: sirsi-nexus/core:v0.2.1
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 50051
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: CONFIG_PATH
          value: /app/config/production.yaml
        - name: RUST_LOG
          value: "info"
        - name: RUST_BACKTRACE
          value: "1"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: sirsi-secrets
              key: jwt-secret
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: sirsi-secrets
              key: vault-token
        - name: VAULT_ADDR
          value: "http://vault-service:8200"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
      - name: config-volume
        configMap:
          name: sirsi-config
      - name: logs-volume
        emptyDir: {}
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sirsi-core
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: sirsi-core-service
  namespace: sirsi-nexus
  labels:
    app: sirsi-core
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: sirsi-core
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sirsi-service-account
  namespace: sirsi-nexus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sirsi-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sirsi-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sirsi-cluster-role
subjects:
- kind: ServiceAccount
  name: sirsi-service-account
  namespace: sirsi-nexus
