syntax = "proto3";

package sirsi.agent.v1;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/sirsinexus/core/proto/agent/v1";
option java_package = "com.sirsinexus.agent.v1";
option java_multiple_files = true;
option csharp_namespace = "SirsiNexus.Agent.V1";

// AgentService provides the core interface for AI agent interactions
// Following Google API Design Guidelines: https://cloud.google.com/apis/design
service AgentService {
    // Session Management - RFC-compliant session lifecycle
    rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
    rpc GetSession(GetSessionRequest) returns (GetSessionResponse);
    rpc DeleteSession(DeleteSessionRequest) returns (google.protobuf.Empty);
    
    // Agent Lifecycle - Standard CRUD operations
    rpc CreateAgent(CreateAgentRequest) returns (CreateAgentResponse);
    rpc GetAgent(GetAgentRequest) returns (GetAgentResponse);
    rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse);
    rpc UpdateAgent(UpdateAgentRequest) returns (UpdateAgentResponse);
    rpc DeleteAgent(DeleteAgentRequest) returns (google.protobuf.Empty);
    
    // Agent Interaction - Core messaging interface
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
    rpc GetSuggestions(GetSuggestionsRequest) returns (GetSuggestionsResponse);
    
    // Health and Monitoring - Observability endpoints
    rpc GetAgentStatus(GetAgentStatusRequest) returns (GetAgentStatusResponse);
    rpc GetSystemHealth(GetSystemHealthRequest) returns (GetSystemHealthResponse);
}

// ============================================================================
// SESSION MANAGEMENT
// ============================================================================

message CreateSessionRequest {
    string user_id = 1;
    map<string, string> context = 2;
    SessionConfig config = 3;
}

message CreateSessionResponse {
    Session session = 1;
    repeated AgentType available_agent_types = 2;
}

message GetSessionRequest {
    string session_id = 1;
}

message GetSessionResponse {
    Session session = 1;
    repeated Agent active_agents = 2;
}

message DeleteSessionRequest {
    string session_id = 1;
}

message Session {
    string session_id = 1;
    string user_id = 2;
    SessionState state = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
    google.protobuf.Timestamp expires_at = 6;
    map<string, string> metadata = 7;
    SessionConfig config = 8;
}

message SessionConfig {
    int32 max_agents = 1;
    int32 timeout_seconds = 2;
    bool enable_logging = 3;
    map<string, string> preferences = 4;
}

enum SessionState {
    SESSION_STATE_UNSPECIFIED = 0;
    SESSION_STATE_ACTIVE = 1;
    SESSION_STATE_SUSPENDED = 2;
    SESSION_STATE_EXPIRED = 3;
    SESSION_STATE_TERMINATED = 4;
}

// ============================================================================
// AGENT MANAGEMENT
// ============================================================================

message CreateAgentRequest {
    string session_id = 1;
    string agent_type = 2;
    AgentConfig config = 3;
    map<string, string> context = 4;
}

message CreateAgentResponse {
    Agent agent = 1;
    repeated Capability capabilities = 2;
}

message GetAgentRequest {
    string session_id = 1 ;
    string agent_id = 2 ;
}

message GetAgentResponse {
    Agent agent = 1;
    AgentMetrics metrics = 2;
}

message ListAgentsRequest {
    string session_id = 1 ;
    int32 page_size = 2;
    string page_token = 3;
    string filter = 4;  // CEL expression for filtering
}

message ListAgentsResponse {
    repeated Agent agents = 1;
    string next_page_token = 2;
    int32 total_size = 3;
}

message UpdateAgentRequest {
    string session_id = 1 ;
    string agent_id = 2 ;
    Agent agent = 3;
    google.protobuf.FieldMask update_mask = 4;
}

message UpdateAgentResponse {
    Agent agent = 1;
}

message DeleteAgentRequest {
    string session_id = 1 ;
    string agent_id = 2 ;
}

message Agent {
    string agent_id = 1;
    string session_id = 2;
    string agent_type = 3;
    AgentState state = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
    AgentConfig config = 7;
    map<string, string> metadata = 8;
    string parent_agent_id = 9;  // For hierarchical agents
}

message AgentConfig {
    map<string, string> parameters = 1;
    int32 timeout_seconds = 2;
    int32 max_concurrent_operations = 3;
    bool enable_caching = 4;
    repeated string required_capabilities = 5;
}

enum AgentState {
    AGENT_STATE_UNSPECIFIED = 0;
    AGENT_STATE_INITIALIZING = 1;
    AGENT_STATE_READY = 2;
    AGENT_STATE_BUSY = 3;
    AGENT_STATE_ERROR = 4;
    AGENT_STATE_TERMINATED = 5;
}

message AgentType {
    string type_id = 1;
    string display_name = 2;
    string description = 3;
    string version = 4;
    repeated Capability capabilities = 5;
    map<string, string> default_config = 6;
}

message Capability {
    string capability_id = 1;
    string name = 2;
    string description = 3;
    repeated Parameter parameters = 4;
}

message Parameter {
    string name = 1;
    string type = 2;  // e.g., "string", "int", "bool", "object"
    string description = 3;
    bool required = 4;
    google.protobuf.Any default_value = 5;
}

// ============================================================================
// MESSAGING & INTERACTION
// ============================================================================

message SendMessageRequest {
    string session_id = 1 ;
    string agent_id = 2 ;
    Message message = 3;
    MessageOptions options = 4;
}

message SendMessageResponse {
    string message_id = 1;
    Message response = 2;
    repeated Suggestion suggestions = 3;
    MessageMetrics metrics = 4;
}

message GetSuggestionsRequest {
    string session_id = 1 ;
    string agent_id = 2 ;
    SuggestionContext context = 3;
    int32 max_suggestions = 4;
}

message GetSuggestionsResponse {
    repeated Suggestion suggestions = 1;
    string context_id = 2;
}

message Message {
    string message_id = 1;
    MessageType type = 2;
    string content = 3;
    map<string, string> metadata = 4;
    google.protobuf.Timestamp timestamp = 5;
    repeated Attachment attachments = 6;
}

enum MessageType {
    MESSAGE_TYPE_UNSPECIFIED = 0;
    MESSAGE_TYPE_TEXT = 1;
    MESSAGE_TYPE_COMMAND = 2;
    MESSAGE_TYPE_QUERY = 3;
    MESSAGE_TYPE_RESPONSE = 4;
    MESSAGE_TYPE_ERROR = 5;
    MESSAGE_TYPE_SYSTEM = 6;
}

message MessageOptions {
    int32 timeout_seconds = 1;
    bool stream_response = 2;
    map<string, string> context = 3;
    Priority priority = 4;
}

enum Priority {
    PRIORITY_UNSPECIFIED = 0;
    PRIORITY_LOW = 1;
    PRIORITY_NORMAL = 2;
    PRIORITY_HIGH = 3;
    PRIORITY_CRITICAL = 4;
}

message Attachment {
    string attachment_id = 1;
    string name = 2;
    string mime_type = 3;
    int64 size_bytes = 4;
    oneof content {
        bytes data = 5;
        string url = 6;
    }
}

message SuggestionContext {
    string context_type = 1;
    map<string, string> context_data = 2;
    repeated string tags = 3;
}

message Suggestion {
    string suggestion_id = 1;
    string title = 2;
    string description = 3;
    SuggestionType type = 4;
    Action action = 5;
    float confidence = 6;
    map<string, string> metadata = 7;
    int32 priority = 8;
}

enum SuggestionType {
    SUGGESTION_TYPE_UNSPECIFIED = 0;
    SUGGESTION_TYPE_ACTION = 1;
    SUGGESTION_TYPE_QUERY = 2;
    SUGGESTION_TYPE_INSIGHT = 3;
    SUGGESTION_TYPE_WARNING = 4;
    SUGGESTION_TYPE_OPTIMIZATION = 5;
}

message Action {
    string action_type = 1;
    map<string, string> parameters = 2;
    string command = 3;
    repeated string required_permissions = 4;
}

// ============================================================================
// MONITORING & HEALTH
// ============================================================================

message GetAgentStatusRequest {
    string session_id = 1 ;
    string agent_id = 2 ;
}

message GetAgentStatusResponse {
    AgentStatus status = 1;
    AgentMetrics metrics = 2;
    repeated Capability active_capabilities = 3;
    string health_status = 4;
}

message GetSystemHealthRequest {
    bool include_metrics = 1;
}

message GetSystemHealthResponse {
    SystemHealth health = 1;
    SystemMetrics metrics = 2;
}

message AgentStatus {
    AgentState state = 1;
    string status_message = 2;
    google.protobuf.Timestamp last_activity = 3;
    int32 active_operations = 4;
    map<string, string> status_details = 5;
}

message AgentMetrics {
    int64 messages_processed = 1;
    int64 operations_completed = 2;
    int64 errors_encountered = 3;
    double average_response_time_ms = 4;
    google.protobuf.Timestamp last_reset = 5;
    map<string, double> custom_metrics = 6;
}

message MessageMetrics {
    double processing_time_ms = 1;
    int64 tokens_processed = 2;
    string model_used = 3;
    map<string, double> performance_metrics = 4;
}

message SystemHealth {
    HealthStatus overall_status = 1;
    map<string, ComponentHealth> components = 2;
    google.protobuf.Timestamp last_check = 3;
}

enum HealthStatus {
    HEALTH_STATUS_UNSPECIFIED = 0;
    HEALTH_STATUS_HEALTHY = 1;
    HEALTH_STATUS_DEGRADED = 2;
    HEALTH_STATUS_UNHEALTHY = 3;
    HEALTH_STATUS_UNKNOWN = 4;
}

message ComponentHealth {
    HealthStatus status = 1;
    string message = 2;
    map<string, string> details = 3;
}

message SystemMetrics {
    int32 active_sessions = 1;
    int32 total_agents = 2;
    double cpu_usage_percent = 3;
    double memory_usage_percent = 4;
    int64 uptime_seconds = 5;
    map<string, double> custom_metrics = 6;
}

